""" Калькулятор

Ограничение по времени работы программы: 4 секунды

Исполнитель «Калькулятор» может с заданным числом X выполнить одну из трех операций и получить новое число. Возможные операции:
    Прибавить к числу X единицу.
    Умножить число X на 2.
    Умножить число X на 3.

Определите, какое наименьшее число операций необходимо для того, чтобы получить из числа 1 заданное число N.

Входные данные

Программа получает на вход одно число N , не превосходящее 10 6.
Выходные данные

Программа должна вывести одно число — наименьшее количество операций, необходимых для получения из числа 1 числа N .

"""

# # N = int(input())
# # x = 1
# # operat = 0
# #
# while(x != N):
#     operat += 1
#     if x*3 < N:
#         x *= 3
#     elif x*2 < N:
#         x *= 2
#     else:
#         x += 1
#     print(x)
#
# print(operat)

"""
Решим задачу методом динамического программирования. Целевая функция: F(i) — наименьшее число операций, при помощи которых можно получить число i. Число i можно получить за одну операцию из числа i−1, i/2 (если i делится на 2) и i/3 (если i делится на 3). Рекуррентное соотношение — F[i]=min(F[i−1],F[i/2],F[i/3])+1, при этом значение F[i/2] нужно учитывать, только если i делится на 2, а значение F[i/3] — только если i делится на 3. Начальное значение — F[1]=0.

"""
# НИЧЕГО НЕ ПОНЯТНО(((((
N = int(input())
F = [0] * (N + 1)
F[1] = 0

for i in range(2, N+1):
    F[i] = F[i-1]
    if i % 2 == 0 and F[i//2] < F[i]:
        F[i] = F[i//2]
    if i % 3 == 0 and F[i//3] < F[i]:
        F[i] = F[i//3]
    F[i] += 1

print(F[N])
